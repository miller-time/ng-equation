"use strict";angular.module("ngEquation",["ui.bootstrap","ngEquation.templates"]),angular.module("ngEquation").controller("EquationCtrl",["$filter","UnknownOperandClassException",function(a,b){function c(d){if(d.operands)angular.forEach(d.operands,function(a){c(a)});else{var f=a("filter")(e.options.availableOperands,{class:d.class})[0];if(angular.isUndefined(f))throw new b(d.class);angular.extend(d,f)}}function d(){e.options.iconAddClass=e.options.iconAddClass||"glyphicon glyphicon-plus",e.options.iconDragClass=e.options.iconDragClass||"glyphicon glyphicon-th",e.options.iconEditClass=e.options.iconEditClass||"glyphicon glyphicon-pencil",e.options.iconRemoveClass=e.options.iconRemoveClass||"glyphicon glyphicon-remove"}var e=this;if(d(),e.topLevelGroup={operator:"AND",operands:[],onReady:function(a){e.groupApi=a}},e.value=function(){var a;return e.groupApi&&(a=e.groupApi.value()),a},e.formula=function(){var a;return e.groupApi&&(a=e.groupApi.formula()),a},e.loadEquation=function(a){e.topLevelGroup.operator=a.operator;var b=angular.copy(a.operands);angular.forEach(b,function(a){c(a)}),e.topLevelGroup.operator=a.operator,e.topLevelGroup.operands=b},angular.isFunction(e.onReady)){var f={value:e.value,formula:e.formula,loadEquation:e.loadEquation};e.onReady({equationApi:f})}}]).directive("equation",["$templateCache",function(a){return{restrict:"EA",scope:{},transclude:{toolboxLabel:"?toolboxLabel",formulaLabel:"?formulaLabel"},bindToController:{options:"<equationOptions",class:"@equationClass",onReady:"&"},controller:"EquationCtrl",controllerAs:"equation",template:a.get("equation.html")}}]),angular.module("ngEquation").factory("MissingOperandOptionException",function(){function a(a){this.message='Operand options missing required property "'+a+'".',this.stack=(new Error).stack}return a.prototype=Object.create(Error.prototype),a.prototype.constructor=a,a.prototype.name="MissingOperandOptionException",a}),angular.module("ngEquation").factory("OperandOptionTypeException",function(){function a(a,b,c){this.message='Operand options property "'+a+'" is incorrect type. Expected: "'+b+'". Got: "'+c+'".',this.stack=(new Error).stack}return a.prototype=Object.create(Error.prototype),a.prototype.constructor=a,a.prototype.name="OperandOptionTypeException",a}),angular.module("ngEquation").factory("UnknownOperandClassException",function(){function a(a){this.message='Available operands does not include an operand with class "'+a+'".',this.stack=(new Error).stack}return a.prototype=Object.create(Error.prototype),a.prototype.constructor=a,a.prototype.name="UnknownOperandClassException",a}),angular.module("ngEquation").controller("ExpressionGroupCtrl",function(){function a(b){var d;return d=c.isSubgroup(b)?{operator:b.operator,operands:b.operands.map(function(b){return a(b)})}:{class:b.class,value:b.value,label:b.getLabel(b)}}function b(a,d){var e=[];angular.forEach(a,function(a){c.isSubgroup(a)?e.push(["(",b(a.operands,a.operator),")"].join("")):e.push(a.getLabel(a))});var f="";return"AND NOT"===d&&(f="NOT "),f+e.join(" "+d+" ")}var c=this;if(c.addOperand=function(a){c.operands.push(angular.copy(a))},c.addSubgroup=function(){c.addOperand({operator:"AND",operands:[]})},c.isSubgroup=function(a){return!!a.operands},c.getIndexOfOperand=function(a){if(!c.isSubgroup(a))for(var b=0,d=c.operands.length;b<d;b++)if(!c.isSubgroup(c.operands[b])&&c.operands[b].value===a.value)return b;return-1},c.removeSubgroup=function(a){c.operands.splice(a,1)},c.removeOperand=function(a){var b=c.getIndexOfOperand(a);b!==-1&&c.operands.splice(b,1)},c.value=function(){return{operator:c.operator,operands:c.operands.map(function(b){return a(b)})}},c.formula=function(){return b(c.operands,c.operator)},angular.isFunction(c.onReady)){var d={value:c.value,formula:c.formula,addOperand:c.addOperand};c.onReady({groupApi:d})}}).directive("expressionGroup",["$compile","$templateCache","expressionGroupDragNDrop",function(a,b,c){return{restrict:"EA",scope:{},bindToController:{parent:"=?",subgroupId:"@",operator:"=",operands:"=",availableOperands:"=",onReady:"&",equationOptions:"<"},controller:"ExpressionGroupCtrl",controllerAs:"group",compile:function(b){var d,e=b.contents().remove();return{post:function(b,f){d||(d=a(e)),d(b,function(a){f.append(a)}),c.setup(b,f)}}},template:b.get("expression-group.html")}}]),angular.module("ngEquation").controller("ExpressionOperandToolboxCtrl",function(){}).directive("expressionOperandToolbox",["$templateCache",function(a){return{restrict:"EA",scope:{},bindToController:{operands:"=",defaultGroupApi:"<?",equationOptions:"<"},controller:"ExpressionOperandToolboxCtrl",controllerAs:"toolbox",template:a.get("expression-operand-toolbox.html")}}]),angular.module("ngEquation").factory("operandOptions",["MissingOperandOptionException","OperandOptionTypeException",function(a,b){var c={class:{type:"string",required:!0},typeLabel:{type:"string",required:!0},editMetadata:{type:"function",required:!0},getLabel:{type:"function",required:!0},getTooltipText:{type:"function",required:!1}};return{validate:function(d){angular.forEach(c,function(c,e){if(c.required&&!(e in d))throw new a(e);if(e in d&&typeof d[e]!==c.type)throw new b(e,c.type,typeof d[e])})}}}]).controller("ExpressionOperandCtrl",["$q","$log","operandOptions",function(a,b,c){function d(a){e.group?angular.forEach(a,function(a){var b=angular.copy(e.options);b.value=a,e.group.addOperand(b)}):b.error("unable to add additional operands because there is no group")}var e=this;c.validate(e.options);var f=angular.isDefined(e.options.value);e.removeFromGroup=function(){e.group&&e.group.removeOperand(e.options)},e.editMetadata=function(){var c=e.options.editMetadata(e.options);a.when(c).then(function(a){var c=a&&a.value,g=a&&a.addMultiple;angular.isDefined(c)?(angular.isArray(c)&&g?(e.options.value=c[0],d(c.slice(1))):!angular.isArray(c)&&g?b.error('editMetadata must return an array when using the "addMultiple" option'):e.options.value=c,f=!0):f?b.warn("editMetadata resulted in undefined value, operand will retain previous value of "+e.options.value):e.removeFromGroup()},function(){f||e.removeFromGroup()})},e.addToDefaultGroup=function(){e.defaultGroupApi&&e.defaultGroupApi.addOperand(e.options)},e.group&&angular.isUndefined(e.options.value)&&e.editMetadata(e.options)}]).directive("expressionOperand",["$templateCache","expressionOperandDragNDrop",function(a,b){return{restrict:"EA",scope:{},bindToController:{group:"=?",options:"=operandOptions",defaultGroupApi:"<?",equationOptions:"<"},controller:"ExpressionOperandCtrl",controllerAs:"operand",link:function(a,c){b.setup(a,c)},template:a.get("expression-operand.html")}}]),angular.module("ngEquation").factory("expressionGroupDragNDrop",["$window",function(a){return{setup:function(b,c){a.interact(c.find(".eq-new-operand")[0]).dropzone({accept:".eq-operand",overlap:.1,checker:function(a,b,c,d,e,f,g){var h=angular.element(g).scope().operand,i=angular.element(e).scope();if(i){var j=angular.element(e).scope().group;return c&&j.getIndexOfOperand(h.options)===-1}return!1},ondropactivate:function(a){a.target.classList.add("drop-active")},ondragenter:function(b){b.target.classList.add("drop-target"),b.relatedTarget.classList.add("can-drop");var c=a.interact.getElementRect(b.target),d={x:c.left+c.width/2,y:c.top+c.height/2};b.draggable.draggable({snap:{targets:[d]}})},ondragleave:function(a){a.target.classList.remove("drop-target"),a.relatedTarget.classList.remove("can-drop"),a.draggable.draggable({snap:{targets:[{x:parseFloat(a.relatedTarget.getAttribute("data-start-x")),y:parseFloat(a.relatedTarget.getAttribute("data-start-y"))}]}})},ondrop:function(a){a.relatedTarget.classList.remove("can-drop");var c=angular.element(a.relatedTarget).scope().operand,d=angular.element(a.target).scope().group;if(b.$apply(function(){d.addOperand(c.options)}),c.group)b.$apply(function(){c.removeFromGroup()});else{var e=a.relatedTarget;a.draggable.draggable({snap:{targets:[{x:parseFloat(e.getAttribute("data-start-x")),y:parseFloat(e.getAttribute("data-start-y"))}]}}),e.style.webkitTransform=e.style.transform="none",e.setAttribute("data-x",0),e.setAttribute("data-y",0)}},ondropdeactivate:function(a){a.target.classList.remove("drop-active"),a.target.classList.remove("drop-target")}})}}}]),angular.module("ngEquation").factory("expressionOperandDragNDrop",["$window",function(a){return{setup:function(b,c){var d=c.find(".eq-operand")[0];a.interact(d).draggable({autoScroll:!0,snap:{range:1/0,relativePoints:[{x:.5,y:.5}],endOnly:!0},onstart:function(b){var c=parseFloat(b.target.getAttribute("data-start-x")),d=parseFloat(b.target.getAttribute("data-start-y"));if(isNaN(c)||isNaN(d)){var e=a.interact.getElementRect(b.target);c=e.left+e.width/2,d=e.top+e.height/2,b.target.setAttribute("data-start-x",c),b.target.setAttribute("data-start-y",d),b.interactable.draggable({snap:{targets:[{x:c,y:d}]}})}},onmove:function(a){var b=a.target,c=(parseFloat(b.getAttribute("data-x"))||0)+a.dx,d=(parseFloat(b.getAttribute("data-y"))||0)+a.dy;b.style.webkitTransform=b.style.transform="translate("+c+"px, "+d+"px)",b.setAttribute("data-x",c),b.setAttribute("data-y",d)}}).dropzone({accept:".eq-operand",checker:function(a,b,c,d,e,f,g){var h=angular.element(e).scope();if(h){var i=h.operand;if(c&&i){var j=angular.element(g).scope().operand;return c&&i.options.value!==j.options.value}}return!1},ondropactivate:function(a){a.target.classList.add("drop-active")},ondragenter:function(b){b.target.classList.add("drop-target"),b.relatedTarget.classList.add("can-drop");var c=a.interact.getElementRect(b.target),d={x:c.left+c.width/2,y:c.top+c.height/2};b.draggable.draggable({snap:{targets:[d]}})},ondragleave:function(a){a.target.classList.remove("drop-target"),a.relatedTarget.classList.remove("can-drop"),a.draggable.draggable({snap:{targets:[{x:parseFloat(a.relatedTarget.getAttribute("data-start-x")),y:parseFloat(a.relatedTarget.getAttribute("data-start-y"))}]}})},ondrop:function(a){a.relatedTarget.classList.remove("can-drop");var c=angular.element(a.relatedTarget).scope().operand,d=angular.element(a.target).scope().operand;if(b.$apply(function(){d.group.addOperand({operator:"AND",operands:[d.options,c.options]})}),b.$apply(function(){d.removeFromGroup()}),c.group)b.$apply(function(){c.removeFromGroup()});else{var e=a.relatedTarget;a.draggable.draggable({snap:{targets:[{x:parseFloat(e.getAttribute("data-start-x")),y:parseFloat(e.getAttribute("data-start-y"))}]}}),e.style.webkitTransform=e.style.transform="none",e.setAttribute("data-x",0),e.setAttribute("data-y",0)}},ondropdeactivate:function(a){a.target.classList.remove("drop-active"),a.target.classList.remove("drop-target")}}).allowFrom(".eq-operand-drag-btn").actionChecker(function(a,b,c){return 0!==b.button?null:c})}}}]);